{"ast":null,"code":"import { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/post.service\";\nimport * as i2 from \"../new-post/new-post.component\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../post/post.component\";\n\nfunction PostsContainerComponent_app_post_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-post\", 3);\n  }\n\n  if (rf & 2) {\n    const post_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"post\", post_r1);\n  }\n}\n\nexport class PostsContainerComponent {\n  constructor(postService) {\n    this.postService = postService;\n    this.posts = new Observable();\n  }\n\n  addPost(post) {\n    this.postService.addPost(post);\n    this.posts = this.postService.subject;\n    console.log(\"post is submitted into the database\");\n  }\n\n  ngOnInit() {\n    //use ngOnInit lifecycle method to grab the posts as soon as the posts-container component is created\n    console.log(this.postService.subject);\n    this.postService.getPosts();\n    this.posts = this.postService.subject;\n    console.log(\"got all posts back\");\n  }\n\n}\n\nPostsContainerComponent.ɵfac = function PostsContainerComponent_Factory(t) {\n  return new (t || PostsContainerComponent)(i0.ɵɵdirectiveInject(i1.PostService));\n};\n\nPostsContainerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostsContainerComponent,\n  selectors: [[\"app-posts-container\"]],\n  decls: 4,\n  vars: 3,\n  consts: [[1, \"posts-container\"], [3, \"onAddPost\"], [3, \"post\", 4, \"ngFor\", \"ngForOf\"], [3, \"post\"]],\n  template: function PostsContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"app-new-post\", 1);\n      i0.ɵɵlistener(\"onAddPost\", function PostsContainerComponent_Template_app_new_post_onAddPost_1_listener($event) {\n        return ctx.addPost($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, PostsContainerComponent_app_post_2_Template, 1, 1, \"app-post\", 2);\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(3, 1, ctx.posts));\n    }\n  },\n  directives: [i2.NewPostComponent, i3.NgForOf, i4.PostComponent],\n  pipes: [i3.AsyncPipe],\n  styles: [\".post-container[_ngcontent-%COMP%]{\\r\\n    margin-top: 1000px;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    align-self: center;\\r\\n    align-items: center;\\r\\n    width: 80%;\\r\\n    height:-webkit-fit-content;\\r\\n    height:-moz-fit-content;\\r\\n    height:fit-content;\\r\\n}\\r\\n\\r\\n.post[_ngcontent-%COMP%]{\\r\\n    width: 50%;\\r\\n    margin-top: 80px;\\r\\n    margin-bottom: 10px;\\r\\n    border: solid 2px lightgray;\\r\\n    padding: 10px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3RzLWNvbnRhaW5lci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0lBQ2xCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsdUJBQXVCO0lBQ3ZCLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIsVUFBVTtJQUNWLDBCQUFrQjtJQUFsQix1QkFBa0I7SUFBbEIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksVUFBVTtJQUNWLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsMkJBQTJCO0lBQzNCLGFBQWE7QUFDakIiLCJmaWxlIjoicG9zdHMtY29udGFpbmVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucG9zdC1jb250YWluZXJ7XHJcbiAgICBtYXJnaW4tdG9wOiAxMDAwcHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgICBoZWlnaHQ6Zml0LWNvbnRlbnQ7XHJcbn1cclxuXHJcbi5wb3N0e1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIG1hcmdpbi10b3A6IDgwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgYm9yZGVyOiBzb2xpZCAycHggbGlnaHRncmF5O1xyXG4gICAgcGFkZGluZzogMTBweDtcclxufSJdfQ== */\"]\n});","map":{"version":3,"sources":["C:\\Users\\monic\\Desktop\\iLearn\\src\\app\\components\\posts-container\\posts-container.component.ts","C:\\Users\\monic\\Desktop\\iLearn\\src\\app\\components\\posts-container\\posts-container.component.html"],"names":[],"mappings":"AAGA,SAAS,UAAT,QAA2B,MAA3B;;;;;;;;;ACDI,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,UAAA,EAAA,CAAA;;;;;AAA+C,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,OAAA;;;;ADQnD,OAAM,MAAO,uBAAP,CAA8B;AAUlC,EAAA,WAAA,CAAoB,WAApB,EAA2C;AAAvB,SAAA,WAAA,GAAA,WAAA;AARpB,SAAA,KAAA,GAA6B,IAAI,UAAJ,EAA7B;AAQgD;;AAN9C,EAAA,OAAO,CAAC,IAAD,EAAY;AACjB,SAAK,WAAL,CAAiB,OAAjB,CAAyB,IAAzB;AACA,SAAK,KAAL,GAAa,KAAK,WAAL,CAAiB,OAA9B;AACA,IAAA,OAAO,CAAC,GAAR,CAAY,qCAAZ;AACD;;AAIH,EAAA,QAAQ,GAAA;AACN;AACA,IAAA,OAAO,CAAC,GAAR,CAAY,KAAK,WAAL,CAAiB,OAA7B;AACA,SAAK,WAAL,CAAiB,QAAjB;AACA,SAAK,KAAL,GAAa,KAAK,WAAL,CAAiB,OAA9B;AACA,IAAA,OAAO,CAAC,GAAR,CAAY,oBAAZ;AACD;;AAlBiC;;;mBAAvB,uB,EAAuB,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,WAAA,C;AAAA,C;;;QAAvB,uB;AAAuB,EAAA,SAAA,EAAA,CAAA,CAAA,qBAAA,CAAA,C;AAAA,EAAA,KAAA,EAAA,C;AAAA,EAAA,IAAA,EAAA,C;AAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,WAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,C;AAAA,EAAA,QAAA,EAAA,SAAA,gCAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;ACVpC,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACI,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,cAAA,EAAA,CAAA;AAAc,MAAA,EAAA,CAAA,UAAA,CAAA,WAAA,EAAA,SAAA,kEAAA,CAAA,MAAA,EAAA;AAAA,eAAa,GAAA,CAAA,OAAA,CAAA,MAAA,CAAb;AAA4B,OAA5B;AAA8B,MAAA,EAAA,CAAA,YAAA;AAC5C,MAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,2CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA;;AACJ,MAAA,EAAA,CAAA,YAAA;;;;AAD+B,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,EAAA,CAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EAAA,GAAA,CAAA,KAAA,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport {Posts} from 'src/app/Posts';\r\nimport { PostService } from 'src/app/services/post.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-posts-container',\r\n  templateUrl: './posts-container.component.html',\r\n  styleUrls: ['./posts-container.component.css']\r\n})\r\nexport class PostsContainerComponent implements OnInit {\r\n\r\n  posts: Observable<Posts[]> = new Observable<Posts[]>();\r\n\r\n    addPost(post: Posts): void{\r\n      this.postService.addPost(post);\r\n      this.posts = this.postService.subject;\r\n      console.log(\"post is submitted into the database\")\r\n    }\r\n    \r\n  constructor(private postService:PostService) { }\r\n\r\n  ngOnInit(): void {\r\n    //use ngOnInit lifecycle method to grab the posts as soon as the posts-container component is created\r\n    console.log(this.postService.subject)\r\n    this.postService.getPosts();\r\n    this.posts = this.postService.subject;\r\n    console.log(\"got all posts back\")\r\n  }\r\n\r\n}\r\n","<div class=\"posts-container\" >\r\n    <app-new-post (onAddPost)=\"addPost($event)\"></app-new-post>\r\n    <app-post *ngFor=\"let post of (posts | async)\" [post]=\"post\"></app-post>\r\n</div>\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}