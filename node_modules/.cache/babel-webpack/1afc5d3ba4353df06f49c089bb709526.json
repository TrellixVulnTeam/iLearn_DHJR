{"ast":null,"code":"import { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/assignments.service\";\nimport * as i2 from \"src/app/services/user.service\";\nimport * as i3 from \"../new-post/new-post.component\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../post/post.component\";\n\nfunction AssignmentContainerComponent_app_post_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-post\", 3);\n  }\n\n  if (rf & 2) {\n    const post_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"post\", post_r1);\n  }\n}\n\nexport class AssignmentContainerComponent {\n  constructor(assignmentService, userService) {\n    this.assignmentService = assignmentService;\n    this.userService = userService;\n    this.assignments = new Observable();\n  }\n\n  ngOnInit() {\n    this.assignmentService.getAllAssignments();\n    this.assignments = this.assignmentService.subject;\n    console.log(this.assignments);\n  }\n\n}\n\nAssignmentContainerComponent.ɵfac = function AssignmentContainerComponent_Factory(t) {\n  return new (t || AssignmentContainerComponent)(i0.ɵɵdirectiveInject(i1.AssignmentsService), i0.ɵɵdirectiveInject(i2.UserService));\n};\n\nAssignmentContainerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AssignmentContainerComponent,\n  selectors: [[\"app-assignment-container\"]],\n  decls: 4,\n  vars: 3,\n  consts: [[1, \"posts-container\"], [3, \"onAddPost\"], [3, \"post\", 4, \"ngFor\", \"ngForOf\"], [3, \"post\"]],\n  template: function AssignmentContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"app-new-post\", 1);\n      i0.ɵɵlistener(\"onAddPost\", function AssignmentContainerComponent_Template_app_new_post_onAddPost_1_listener($event) {\n        return ctx.addPost($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, AssignmentContainerComponent_app_post_2_Template, 1, 1, \"app-post\", 2);\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(3, 1, ctx.posts));\n    }\n  },\n  directives: [i3.NewPostComponent, i4.NgForOf, i5.PostComponent],\n  pipes: [i4.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhc3NpZ25tZW50LWNvbnRhaW5lci5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"sources":["C:\\Users\\monic\\Desktop\\iLearn\\src\\app\\components\\assignment-container\\assignment-container.component.ts","C:\\Users\\monic\\Desktop\\iLearn\\src\\app\\components\\assignment-container\\assignment-container.component.html"],"names":[],"mappings":"AACA,SAAS,UAAT,QAA2B,MAA3B;;;;;;;;;;ACCI,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,UAAA,EAAA,CAAA;;;;;AAA+C,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,OAAA;;;;ADSnD,OAAM,MAAO,4BAAP,CAAmC;AAIvC,EAAA,WAAA,CAAoB,iBAApB,EAAkE,WAAlE,EAAyF;AAArE,SAAA,iBAAA,GAAA,iBAAA;AAA8C,SAAA,WAAA,GAAA,WAAA;AAHlE,SAAA,WAAA,GAAyC,IAAI,UAAJ,EAAzC;AAG8F;;AAE9F,EAAA,QAAQ,GAAA;AAER,SAAK,iBAAL,CAAuB,iBAAvB;AACA,SAAK,WAAL,GAAmB,KAAK,iBAAL,CAAuB,OAA1C;AACA,IAAA,OAAO,CAAC,GAAR,CAAY,KAAK,WAAjB;AACD;;AAXwC;;;mBAA5B,4B,EAA4B,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,kBAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,WAAA,C;AAAA,C;;;QAA5B,4B;AAA4B,EAAA,SAAA,EAAA,CAAA,CAAA,0BAAA,CAAA,C;AAAA,EAAA,KAAA,EAAA,C;AAAA,EAAA,IAAA,EAAA,C;AAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,WAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,C;AAAA,EAAA,QAAA,EAAA,SAAA,qCAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;ACXzC,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACI,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,cAAA,EAAA,CAAA;AAAc,MAAA,EAAA,CAAA,UAAA,CAAA,WAAA,EAAA,SAAA,uEAAA,CAAA,MAAA,EAAA;AAAA,eAAa,GAAA,CAAA,OAAA,CAAA,MAAA,CAAb;AAA4B,OAA5B;AAA8B,MAAA,EAAA,CAAA,YAAA;AAC5C,MAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,gDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA;;AACJ,MAAA,EAAA,CAAA,YAAA;;;;AAD+B,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,EAAA,CAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EAAA,GAAA,CAAA,KAAA,CAAA","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Assignments } from 'src/app/Assignments';\r\nimport { AssignmentsService } from 'src/app/services/assignments.service';\r\nimport{UserService} from 'src/app/services/user.service'\r\n\r\n@Component({\r\n  selector: 'app-assignment-container',\r\n  templateUrl: './assignment-container.component.html',\r\n  styleUrls: ['./assignment-container.component.css']\r\n})\r\nexport class AssignmentContainerComponent implements OnInit {\r\n  assignments: Observable<Assignments[]> = new Observable<Assignments[]>();\r\n\r\n\r\n  constructor(private assignmentService:AssignmentsService, private userService:UserService) { }\r\n\r\n  ngOnInit(): void {\r\n \r\n  this.assignmentService.getAllAssignments();\r\n  this.assignments = this.assignmentService.subject;\r\n  console.log(this.assignments)\r\n}\r\n }","<div class=\"posts-container\" >\r\n    <app-new-post (onAddPost)=\"addPost($event)\"></app-new-post>\r\n    <app-post *ngFor=\"let post of (posts | async)\" [post]=\"post\"></app-post>\r\n</div>\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}