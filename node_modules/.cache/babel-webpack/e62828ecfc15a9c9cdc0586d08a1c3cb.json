{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http) {\n      this.http = http;\n      this.user = {\n        id: 0,\n        subjectId: 0,\n        username: '',\n        userrole: '',\n        roleId: 0,\n        assignId: 0,\n        name: '',\n        des: '',\n        grade: '',\n        createDate: new Date(),\n        userId: 0\n      };\n    }\n\n    create(userId, subjectId, des) {\n      return this.http.post(\"http://localhost:8080/assignment/create\", JSON.stringify({\n        userId,\n        subjectId,\n        des\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).pipe(catchError(e => {\n        return throwError(e);\n      }));\n    }\n\n    login(username, password) {\n      return this.http.post(\"http://localhost:8080/users/login\", JSON.stringify({\n        username,\n        password\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).pipe(catchError(e => {\n        return throwError(e);\n      }));\n    }\n\n    register(firstName, lastName, email, password, roleId) {\n      return this.http.post(\"http://localhost:8080/users/register\", JSON.stringify({\n        firstName,\n        lastName,\n        email,\n        password,\n        roleId\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).pipe(catchError(e => {\n        return throwError(e);\n      }));\n    }\n\n    update(userId, password) {\n      return this.http.post(\"http://localhost:8080/users/update\", JSON.stringify({\n        userId,\n        password\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).pipe(catchError(e => {\n        return throwError(e);\n      }));\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}